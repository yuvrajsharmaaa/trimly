-- Fix database issues for URL shortener
-- Run this in your Supabase SQL editor

-- 1. First, let's check what's in the urls table
SELECT * FROM urls LIMIT 5;

-- 2. Make sure the urls table has the correct structure
-- If the table doesn't exist or has wrong structure, recreate it
DROP TABLE IF EXISTS clicks CASCADE;
DROP TABLE IF EXISTS urls CASCADE;

CREATE TABLE urls (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
    original_url TEXT NOT NULL,
    short_url TEXT UNIQUE NOT NULL,
    custom_url TEXT UNIQUE,
    qr_code TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- 3. Create clicks table
CREATE TABLE clicks (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    url_id BIGINT REFERENCES urls(id) ON DELETE CASCADE,
    ip TEXT,
    user_agent TEXT,
    referer TEXT,
    country TEXT,
    city TEXT,
    device TEXT,
    browser TEXT,
    os TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- 4. Enable RLS
ALTER TABLE urls ENABLE ROW LEVEL SECURITY;
ALTER TABLE clicks ENABLE ROW LEVEL SECURITY;

-- 5. Create RLS policies for urls table
CREATE POLICY "Users can create URLs"
ON urls FOR INSERT
TO authenticated, anon
WITH CHECK (true);

CREATE POLICY "Users can view URLs"
ON urls FOR SELECT
TO authenticated, anon
USING (true);

CREATE POLICY "Users can update their own URLs"
ON urls FOR UPDATE
TO authenticated, anon
USING (true);

CREATE POLICY "Users can delete their own URLs"
ON urls FOR DELETE
TO authenticated, anon
USING (true);

-- 6. Create RLS policies for clicks table
CREATE POLICY "Anyone can insert clicks"
ON clicks FOR INSERT
TO authenticated, anon
WITH CHECK (true);

CREATE POLICY "Anyone can view clicks"
ON clicks FOR SELECT
TO authenticated, anon
USING (true);

-- 7. Create indexes for better performance
CREATE INDEX idx_urls_short_url ON urls(short_url);
CREATE INDEX idx_urls_custom_url ON urls(custom_url);
CREATE INDEX idx_clicks_url_id ON clicks(url_id);

-- 8. Insert a test URL to verify everything works
INSERT INTO urls (original_url, short_url, custom_url) 
VALUES ('https://www.google.com', 'test123', 'google')
ON CONFLICT (short_url) DO NOTHING;

-- 9. Test the lookup
SELECT * FROM urls WHERE short_url = 'test123' OR custom_url = 'test123'; 